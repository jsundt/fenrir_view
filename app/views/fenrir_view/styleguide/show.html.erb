<div class="<%= @component.header_style %> u-padding--y-50">
  <div class="container-fluid">
    <div class="row">
      <div class="col-xs-12">
        <h1 class="o-text--headline u-text--bold"><%= @component.title %></h1>
        <p class="o-text--product u-margin--b-25"><%= @component.meta_status %></p>
        <p class="o-text--product"><%= @component.meta_description %></p>
      </div>
    </div>
  </div>
</div>

<div class="container-fluid u-padding--b-100">
<% if @component.stubs? %>
  <% if @component.stubs_correct_format? %>
    <% if @component.stubs_extra_info? %>
      <div class="row u-padding--y-50">
        <div class="col-xs-12">
          <% if @component.component_layout_sections? %>
            <div class="u-padding--b-50">
              <h2 class="o-text--lead">Layout component options</h2>
              <p class="o-text--product">This component supports passing multiple blocks of content. The valid layout options are:</p>

              <pre><code class="language-erb">
              &lt;%= ui_component('<%= @component.name %>', properties) do |layout| %&gt;
                <% @component.component_layout_sections.each do |section| %>
                  &lt;% layout.<%= section %> do %&gt; &lt;html&gt; &lt;% end %&gt;
                <% end %>
              &lt;% end %&gt;
              </code></pre>

              <p class="o-text--product">Have a look at the examples bellow to see how this is rendered to the page.</p>
            </div>
          <% end %>

          <h2 class="o-text--lead">Component Properties:</h2>
          <% @component.default_properties_and_validations.each do |property, options| %>
            <div class="u-bg-zebra--silver-50">
              <div onClick="showPropertyValidations(this)" class="properties-list__item">
                <h3 class="o-text--product">
                  <span class="u-text--bold"><%= property %></span><span class="u-opacity--70"><%= options[:info] %></span>
                </h3>
              </div>

              <div class="properties-list__details is-hidden">
                <p><%= options[:note] %></p>
                <% if options[:validations].any? %>
                  <pre><code class="language-json">validations: <%= JSON.pretty_generate(options[:validations]).gsub(/\"(\S+)?\":/, '\1:') %></code></pre>
                <% else %>
                  <p>No validations set</p>
                <% end %>
              </div>
            </div>
          <% end %>
        </div>
      </div>
    <% end %>
    <% if @component.component_stubs? %>
      <% @component.component_stubs.each_with_index do |component_properties, index| %>
        <% properties = component_properties[:props] %>

        <div class="row u-padding--y-100 u-bg-zebra--silver-50">

          <div class="col-xs-12 col-lg-6">
            <% case @component.variant %>
            <% when 'components' %>
              <%= ui_component(@component.name, properties.clone) do |layout| %>
                <%= component_properties[:yield].html_safe if component_properties[:yield] %>

                <% if component_properties[:yields] %>
                  <% component_properties[:yields].each do |name, content| %>
                    <% layout.public_send(name) do %>
                      <%= content %>
                    <% end %>
                  <% end %>
                <% end %>
              <% end %>
            <% when 'system' %>
              <%= system_component(@component.name, properties.clone) do %>
                <%= component_properties[:yield].html_safe if component_properties[:yield] %>
              <% end %>
            <% else %>
              <% throw "unknown component variant #{@component.variant}" %>
            <% end %>
          </div>

          <div class="col-xs-12 col-lg-6">
            <div class="w-card u-bg--silver">
              <h1 class="o-text--title"><%= @component.stubs_title(index) %></h1>

              <% if @component.variant == "system" %>
                <% helper_start = "system_component(" %>
              <% else %>
                <% helper_start = "ui_component(" %>
              <% end %>

              <% if component_properties[:yield] %>
                <% helper_end = " do %&gt;".html_safe %>
              <% elsif component_properties[:yields] %>
                <% helper_end = " do |layout| %&gt;".html_safe %>
              <% else %>
                <% helper_end = " %&gt;".html_safe %>
              <% end %>

              <% formatted = JSON.pretty_generate properties.except(:yield) %>

<pre><code class="language-erb">
&lt;%= <%= helper_start %>'<%= @component.name %>', <%= formatted.gsub(/\"(\S+)?\":/, '\1:') %>)<%= helper_end %>
<% if properties[:yield] || component_properties[:yields] %>
  <% if properties[:yield] %>
  <%= properties[:yield] %>
  <br>
  <% end %>
<% (component_properties[:yields] || []).each do |name, content| %>
  &lt;% layout.<%= name %> do %&gt;
    <%= content %>
  &lt;% end %&gt;
  <br>
<% end %>
&lt;% end %&gt;
<% end %>
</code></pre>
            </div>
          </div>

        </div>
      <% end %>
    <% end %>
  <% else %>
    <div class="mv-hint">
      <h2><span>Hint:</span>You have Stubs but they don't follow the correct format</h2>
      <ul>
        <li>
          You should write stub examples like this:
          <br>
          <div class="mv-component__description__properties">
            <code class="language-yaml"><%= render 'example', component_name: @component.name %></code>
          </div>
        </li>
      </ul>
    </div>
  <% end %>
<% else %>
  <div class="mv-hint">
    <h2><span>Hint:</span>To see your component make sure you've created stubs:</h2>
    <ul>
      <li>
        You should write stub examples here:
        <br>
        <strong><%= @component.stubs_file %></strong>
        <div class="mv-component__description__properties">
          <code class="language-yaml"><%= render 'example', component_name: @component.name %></code>
        </div>
      </li>
    </ul>
  </div>
<% end %>
</div>
